class Solution {
    public int trap(int[] height) {
        int len = height.length;
        int count = 0;
        int[] lNums = new int[len];
        int[] rNums = new int[len];
        //从左边往右扫描，把左边最大值替代右边。
        for(int j=0; j < len ; j++){
            if(height[j] > count ) {
                count = height[j];
            }
            lNums[j]=count;
        }
        count = 0;
         //从右边往左扫描，把右边最大值替代左边。
        for(int i=len-1; i >=0 ; i--){
              if(height[i] > count ) {
                count = height[i];
            }
            rNums[i]=count;            
        }
        count = 0;
        //找到左和右数组中最小值，减去原来数组的值就是能接的雨水值。        
        for(int k=0; k < len ; k++){
            if( rNums[k] > lNums[k]) {
                count = count + lNums[k] -height[k];
            }else{
                count = count + rNums[k] -height[k];
            }
        }
        return count;
    }
}

这题的拓展：第407题 接雨水II ，把m*n二维数组拆成 m个长度时n的一维数组和n个长度时m的一维数组.
m个长度时n的一维数组, 每个数组接雨水值组成一个二维数组。
n个长度时m的一维数组, 每个数组接雨水值组成一个二维数组。
这两个二维数组对应的位置取最小值相加就是m*n二维数组的接雨水量。